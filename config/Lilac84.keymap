/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define DEFAULT 0
#define LOWER  1
#define RAISE  2
#define ADJUST 3
#define FUNCTION 4

/* NOTE: At the time of the creation of this keymap, there are no specified codes for 'eisuu' and 'kana' input in ZMK.
However, 'LANG1' and 'LANG2' are fully-functioning candidates for 'kana' and 'eisuu' input respectively.
As such, those are in use within the default layer at this time.*/

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&soft_off {
    hold-time-ms = <3000>; // Only turn off it the key is held for 3 seconds or longer.
};

&mt {
    tapping-term-ms = <300>;
    flavor = "balanced";
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt CAPSLOCK ESC        &kp F1    &kp F2    &kp F3   &kp F4         &kp F5     &kp UP                     &mmv MOVE_UP     &kp F6     &kp F7    &kp F8     &kp F9           &kp F10          &mt F12 F11
&kp MINUS               &kp N1    &kp N2    &kp N3   &kp N4         &kp N5     &kp RIGHT                  &mmv MOVE_LEFT   &kp N6     &kp N7    &kp N8     &kp N9           &kp N0           &kp MINUS
&kp TAB                 &kp Q     &kp W     &kp E    &kp R          &kp T      &mt C_PLAY_PAUSE KP_ENTER  &mkp MCLK        &kp Y      &kp U     &kp I      &kp O            &kp P            &mt EQUAL PLUS
&mt PAUSE_BREAK INSERT  &kp A     &kp S     &kp D    &kp F          &kp G      &kp LEFT                   &mmv MOVE_RIGHT  &kp H      &kp J     &kp K      &kp L            &kp SEMI         &kp APOS
&kp LSHFT               &kp Z     &kp X     &kp C    &kp V          &kp B      &kp DOWN                   &mmv MOVE_DOWN   &kp N      &kp M     &kp COMMA  &kp DOT          &kp FSLH         &mt RSHFT KP_ENTER
&kp LCTRL               &kp LGUI  &kp LALT  &kp DEL  &kp BACKSPACE  &kp SPACE  &mkp MB1                   &kp BACKSPACE    &kp SPACE  &mkp MB2  &mo 1      &mt LC(X) LC(C)  &mt LG(V) LC(V)  &mt LC(MINUS) LC(PLUS)
            >;

            sensor-bindings =
                <&inc_dec_kp BACKSPACE DELETE>,
                <&inc_dec_kp PG_DN PG_UP>;
        };

        layer_1 {
            bindings = <
&mt CAPSLOCK ESC    &kp F1    &kp F2    &kp F3   &kp F4         &kp F5     &kp UP                     &mmv MOVE_UP     &kp F6     &kp F7    &kp F8     &kp F9    &kp F10   &bt BT_CLR_ALL
&kp MINUS           &to 1     &to 2     &to 3    &to 4          &kp N5     &kp RIGHT                  &mmv MOVE_LEFT   &kp N6     &kp N7    &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB             &kp Q     &kp W     &kp E    &kp R          &kp T      &mt C_PLAY_PAUSE KP_ENTER  &mkp MCLK        &kp Y      &kp U     &kp I      &kp O     &kp P     &mt EQUAL PLUS
&mt C_PAUSE INSERT  &kp A     &kp S     &kp D    &kp F          &kp G      &kp LEFT                   &mmv MOVE_RIGHT  &kp H      &kp J     &kp K      &kp L     &kp SEMI  &kp APOS
&kp LSHFT           &kp Z     &kp X     &kp C    &kp V          &kp B      &kp DOWN                   &mmv MOVE_DOWN   &kp N      &kp M     &kp COMMA  &kp DOT   &kp FSLH  &mt RSHFT KP_ENTER
&kp LCTRL           &kp LGUI  &kp LALT  &kp DEL  &kp BACKSPACE  &kp SPACE  &mkp MB1                   &kp BACKSPACE    &kp SPACE  &mkp MB2  &to 0      &kp LBKT  &kp RBKT  &kp BSLH
            >;

            sensor-bindings =
                <&inc_dec_kp BACKSPACE DELETE>,
                <&inc_dec_kp PG_DN PG_UP>;
        };

        layer_2 {
            bindings = <
&mt CAPSLOCK ESC        &kp F1    &kp F2    &kp F3   &kp F4         &kp F5     &kp UP                     &mmv MOVE_UP     &kp F6     &kp F7    &kp F8     &kp F9    &kp F10   &kp F11
&kp MINUS               &to 1     &kp N2    &kp N3   &kp N4         &kp N5     &kp RIGHT                  &mmv MOVE_LEFT   &kp N6     &kp N7    &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB                 &kp Q     &kp W     &kp E    &kp R          &kp T      &mt C_PLAY_PAUSE KP_ENTER  &mkp MCLK        &kp Y      &kp U     &kp I      &kp O     &kp P     &mt EQUAL PLUS
&mt PAUSE_BREAK INSERT  &kp A     &kp S     &kp D    &kp F          &kp G      &kp LEFT                   &mmv MOVE_RIGHT  &kp H      &kp J     &kp K      &kp L     &kp SEMI  &kp APOS
&kp LSHFT               &kp Z     &kp X     &kp C    &kp V          &kp B      &kp DOWN                   &mmv MOVE_DOWN   &kp N      &kp M     &kp COMMA  &kp DOT   &kp FSLH  &mt RSHFT KP_ENTER
&kp LCTRL               &kp LGUI  &kp LALT  &kp DEL  &kp BACKSPACE  &kp SPACE  &mkp MB1                   &kp BACKSPACE    &kp SPACE  &mkp MB2  &to 0      &kp LBKT  &kp RBKT  &kp BSLH
            >;

            sensor-bindings =
                <&inc_dec_kp BACKSPACE DELETE>,
                <&inc_dec_kp PG_DN PG_UP>;
        };

        layer_3 {
            bindings = <
&mt CAPSLOCK ESC        &kp F1    &kp F2    &kp F3   &kp F4         &kp F5     &kp UP                     &mmv MOVE_UP     &kp F6     &kp F7    &kp F8     &kp F9    &kp F10   &kp F11
&kp MINUS               &to 1     &kp N2    &kp N3   &kp N4         &kp N5     &kp RIGHT                  &mmv MOVE_LEFT   &kp N6     &kp N7    &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB                 &kp Q     &kp W     &kp E    &kp R          &kp T      &mt C_PLAY_PAUSE KP_ENTER  &mkp MCLK        &kp Y      &kp U     &kp I      &kp O     &kp P     &mt EQUAL PLUS
&mt PAUSE_BREAK INSERT  &kp A     &kp S     &kp D    &kp F          &kp G      &kp LEFT                   &mmv MOVE_RIGHT  &kp H      &kp J     &kp K      &kp L     &kp SEMI  &kp APOS
&kp LSHFT               &kp Z     &kp X     &kp C    &kp V          &kp B      &kp DOWN                   &mmv MOVE_DOWN   &kp N      &kp M     &kp COMMA  &kp DOT   &kp FSLH  &mt RSHFT KP_ENTER
&kp LCTRL               &kp LGUI  &kp LALT  &kp DEL  &kp BACKSPACE  &kp SPACE  &mkp MB1                   &kp BACKSPACE    &kp SPACE  &mkp MB2  &to 0      &kp LBKT  &kp RBKT  &kp BSLH
            >;

            sensor-bindings =
                <&inc_dec_kp BACKSPACE DELETE>,
                <&inc_dec_kp PG_DN PG_UP>;
        };

        layer_4 {
            bindings = <
&mt CAPSLOCK ESC        &kp F1    &kp F2    &kp F3   &kp F4         &kp F5     &kp UP                     &mmv MOVE_UP     &kp F6     &kp F7    &kp F8     &kp F9    &kp F10   &kp F11
&kp MINUS               &to 1     &kp N2    &kp N3   &kp N4         &kp N5     &kp RIGHT                  &mmv MOVE_LEFT   &kp N6     &kp N7    &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB                 &kp Q     &kp W     &kp E    &kp R          &kp T      &mt C_PLAY_PAUSE KP_ENTER  &mkp MCLK        &kp Y      &kp U     &kp I      &kp O     &kp P     &mt EQUAL PLUS
&mt PAUSE_BREAK INSERT  &kp A     &kp S     &kp D    &kp F          &kp G      &kp LEFT                   &mmv MOVE_RIGHT  &kp H      &kp J     &kp K      &kp L     &kp SEMI  &kp APOS
&kp LSHFT               &kp Z     &kp X     &kp C    &kp V          &kp B      &kp DOWN                   &mmv MOVE_DOWN   &kp N      &kp M     &kp COMMA  &kp DOT   &kp FSLH  &mt RSHFT KP_ENTER
&kp LCTRL               &kp LGUI  &kp LALT  &kp DEL  &kp BACKSPACE  &kp SPACE  &mkp MB1                   &kp BACKSPACE    &kp SPACE  &mkp MB2  &to 0      &kp LBKT  &kp RBKT  &kp BSLH
            >;

            sensor-bindings =
                <&inc_dec_kp BACKSPACE DELETE>,
                <&inc_dec_kp PG_DN PG_UP>;
        };
    };
};
